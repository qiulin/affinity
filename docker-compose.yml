version: '3.2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0
    hostname: zookeeper
    ports:
      - "2281:2281"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2281
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.0.0
    ports:
      - "9192:9192"
      - "19192:19192"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2281'
      KAFKA_LISTENERS: "INTERNAL://kafka:9090,EXTERNAL://0.0.0.0:9192"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9090,EXTERNAL://127.0.0.1:9192"
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 19192
      KAFKA_JMX_HOSTNAME: 127.0.0.1
    #volumes:
      #- /var/run/docker.sock:/var/run/docker.sock

  schema_registry:
    image: confluentinc/cp-schema-registry:5.0.0
    depends_on:
      - kafka
    hostname: schema_registry
    ports:
      - "8181:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8081'
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: full_transitive
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9090'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'

  schema_registry_ui:
    image: landoop/schema-registry-ui:latest
    depends_on:
        - schema_registry
    hostname: schema_registry_ui
    ports:
      - "8000:8000"
    environment:
      SCHEMAREGISTRY_URL: 'http://localhost:8181'
