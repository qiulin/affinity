group = rootProject.group
version = rootProject.version

apply plugin: 'scala'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'maven-publish'

ext {
    artefact = 'avro-serde-kafka_' + project(':kafka').baseKafkaVersion + '-scala_' + rootProject.baseScalaVersion
    avroArtefact = 'avro-scala_'+ rootProject.baseScalaVersion
}
if (rootProject.hasProperty('maven-central')) {
    uploadArchives.repositories.mavenDeployer.pom.artifactId = artefact
}
publishing {
    publications {
        maven(MavenPublication) {
            artifactId artefact
            from components.java
        }
    }
}

install.repositories.mavenInstaller.pom.artifactId = artefact
def installer = install.repositories.mavenInstaller
[installer]*.pom*.whenConfigured { pom ->
    pom.dependencies.find {dep -> dep.groupId == 'io.amient.affinity' && dep.artifactId == 'avro' }.artifactId = avroArtefact
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    }
}

apply plugin: "com.github.johnrengelman.shadow"
assemble.dependsOn shadowJar

dependencies {
    compile project(':api')
    compile project(':avro')
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: project(':kafka').kafkaVersion
    compile 'org.scala-lang:scala-library:' + rootProject.scalaVersion
    testCompile project(':kafka:storage-kafka')
    testCompile project(':kafka:test-util-kafka')
    testCompile (group: 'io.confluent', name: 'kafka-schema-registry', version: project(':kafka').confluentVersion)
    testCompile (group: 'io.confluent', name: 'kafka-avro-serializer', version: project(':kafka').confluentVersion)
}



